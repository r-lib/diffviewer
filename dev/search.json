[{"path":[]},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://diffviewer.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://diffviewer.r-lib.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 diffviewer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://diffviewer.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. Joshua Kunst. Author. Winston Chang. Author. . Copyright holder, funder. Paul Fitzpatrick. Copyright holder.            Author included daff.js library Rodrigo Fernandes. Copyright holder.            Author included diff2html library JQuery Foundation. Copyright holder.            Author included jquery library Kevin Decker. Copyright holder.            Author included jsdiff library Matthew Holt. Copyright holder.            Author incldued PapaParse library Huddle. Copyright holder.            Author included resemble library","code":""},{"path":"https://diffviewer.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H, Kunst J, Chang W (2023). diffviewer: HTML Widget Show File Differences. https://diffviewer.r-lib.org, https://github.com/r-lib/diffviewer.","code":"@Manual{,   title = {diffviewer: HTML Widget to Show File Differences},   author = {Hadley Wickham and Joshua Kunst and Winston Chang},   year = {2023},   note = {https://diffviewer.r-lib.org, https://github.com/r-lib/diffviewer}, }"},{"path":"https://diffviewer.r-lib.org/dev/index.html","id":"diffviewer","dir":"","previous_headings":"","what":"HTML Widget to Show File Differences","title":"HTML Widget to Show File Differences","text":"diffviewer provides HTML widget visually comparing files. currently wraps three javascript libraries: resemble.js comparing images. daff.js comparing data frames. jsdiff everything else. extracts common UI provided shinytest vdiffr.","code":""},{"path":"https://diffviewer.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"HTML Widget to Show File Differences","text":"can install released version diffviewer CRAN :","code":"install.packages(\"diffviewer\")"},{"path":"https://diffviewer.r-lib.org/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"HTML Widget to Show File Differences","text":"basic example shows solve common problem:","code":"library(diffviewer) path1 <- tempfile() writeLines(letters, path1) path2 <- tempfile() writeLines(letters[-(10:11)], path2)  visual_diff(path1, path2)"},{"path":"https://diffviewer.r-lib.org/dev/reference/diffviewer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"diffviewer: HTML Widget to Show File Differences — diffviewer-package","title":"diffviewer: HTML Widget to Show File Differences — diffviewer-package","text":"HTML widget shows differences files (text, images, data frames).","code":""},{"path":[]},{"path":"https://diffviewer.r-lib.org/dev/reference/diffviewer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"diffviewer: HTML Widget to Show File Differences — diffviewer-package","text":"Maintainer: Hadley Wickham hadley@posit.co Authors: Joshua Kunst Winston Chang winston@posit.co contributors: Posit Software, PBC [copyright holder, funder] Paul Fitzpatrick (Author included daff.js library) [copyright holder] Rodrigo Fernandes (Author included diff2html library) [copyright holder] JQuery Foundation (Author included jquery library) [copyright holder] Kevin Decker (Author included jsdiff library) [copyright holder] Matthew Holt (Author incldued PapaParse library) [copyright holder] Huddle (Author included resemble library) [copyright holder]","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"HTML widget to visually compare two files — visual_diff","title":"HTML widget to visually compare two files — visual_diff","text":"Currently supports: image diffs .svg .png tabular diffs .csv text diffs everything else","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HTML widget to visually compare two files — visual_diff","text":"","code":"visual_diff(file_old, file_new, width = NULL, height = NULL)"},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTML widget to visually compare two files — visual_diff","text":"file_old, file_new Paths files compare width, height Output size","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HTML widget to visually compare two files — visual_diff","text":"HTML widget","code":""},{"path":[]},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HTML widget to visually compare two files — visual_diff","text":"","code":"path1 <- tempfile() path2 <- tempfile() writeLines(letters, path1) writeLines(letters[-13], path2)  if (interactive()) {   visual_diff(path1, path2) }"},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for visual_diff() — visual_diff_output","title":"Shiny bindings for visual_diff() — visual_diff_output","text":"Use visual_diff_output() ui render_visual_diff(visual_diff(...)) server function.","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for visual_diff() — visual_diff_output","text":"","code":"visual_diff_output(outputId, width = \"100%\", height = \"400px\")  visual_diff_render(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for visual_diff() — visual_diff_output","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates visual_diff env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny bindings for visual_diff() — visual_diff_output","text":"Components use inside Shiny app.","code":""},{"path":"https://diffviewer.r-lib.org/dev/reference/visual_diff_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny bindings for visual_diff() — visual_diff_output","text":"","code":"if (require(\"shiny\") && interactive()) { ui <- fluidPage(   visual_diff_output(\"diff\") )  server <- function(input, output, session) {   path1 <- tempfile()   path2 <- tempfile()   writeLines(letters, path1)   writeLines(letters[-13], path2)    output$diff <- visual_diff_render(visual_diff(path1, path2)) }  shinyApp(ui, server) } #> Loading required package: shiny"},{"path":[]},{"path":"https://diffviewer.r-lib.org/dev/news/index.html","id":"diffviewer-011","dir":"Changelog","previous_headings":"","what":"diffviewer 0.1.1","title":"diffviewer 0.1.1","text":"CRAN release: 2021-09-30 diffviewer widget previously ignored minor pixel differences, now show every difference (#9, #11).","code":""},{"path":"https://diffviewer.r-lib.org/dev/news/index.html","id":"diffviewer-010","dir":"Changelog","previous_headings":"","what":"diffviewer 0.1.0","title":"diffviewer 0.1.0","text":"CRAN release: 2020-09-10 Added NEWS.md file track changes package.","code":""}]
